plugins {
	id 'war'
}

group = 'com.structurizr'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
	mavenCentral()
	maven {
		url "https://build.shibboleth.net/maven/releases/"
	}
	mavenLocal()
}

testing {
	suites {
		test {
			useJUnitJupiter()
		}

		integrationTest(JvmTestSuite) {
			dependencies {
				implementation project()
			}

			targets {
				all {
					testTask.configure {
						shouldRunAfter(test)
					}
				}
			}
		}
	}
}

tasks.named('check') {
	dependsOn(testing.suites.integrationTest)
}

ext {
	set('snakeyaml.version','2.0')
}

dependencies {

	implementation project(':structurizr-onpremises-plugin')

	implementation "com.structurizr:structurizr-annotation:${structurizrVersion}"
	implementation "com.structurizr:structurizr-dsl:${structurizrVersion}"
	implementation "com.structurizr:structurizr-inspection:${structurizrVersion}"
	implementation "com.structurizr:structurizr-autolayout:${structurizrVersion}"

	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	def springVersion = '6.2.7'
	def springSecurityVersion = '6.4.6'
	implementation "org.springframework:spring-webmvc:${springVersion}"
	implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
	implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
	implementation "org.springframework.security:spring-security-ldap:${springSecurityVersion}"
	implementation "org.springframework.security:spring-security-saml2-service-provider:${springSecurityVersion}"
	implementation 'org.springframework.session:spring-session-data-redis:3.3.3'
	implementation 'redis.clients:jedis:5.2.0'

	def luceneVersion = '9.12.1'
	implementation "org.apache.lucene:lucene-core:${luceneVersion}"
	implementation "org.apache.lucene:lucene-queryparser:${luceneVersion}"

	def log4jVersion = '2.24.3'
	implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
	implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
	implementation "org.apache.logging.log4j:log4j-jcl:${log4jVersion}"
	implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"

	implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.17.28'
	implementation 'org.apache.httpcomponents:httpasyncclient:4.1.5'

	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.783'
	implementation 'com.amazonaws:aws-java-sdk-sts:1.12.783'

	implementation 'com.azure:azure-storage-blob:12.30.0'
	implementation 'com.azure:azure-identity:1.16.2'

	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'org.ehcache:ehcache:3.10.8'
	implementation 'org.redisson:redisson:3.38.1'

	// forced for fewer CVEs
	implementation('org.bouncycastle:bcutil-jdk18on') {
		version {
			strictly '1.78.1'
		}
	}
	implementation('org.bouncycastle:bcpkix-jdk18on') {
		version {
			strictly '1.78.1'
		}
	}

	testImplementation 'org.testcontainers:elasticsearch:1.21.0'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

war {
	duplicatesStrategy 'exclude'

	webInf {
		from('src/main/java') {
			include '*.xml'
			into('classes')
		}
	}
}

sourceSets.main.resources {
	srcDirs = ['src/main/java','src/main/resources']
	include '**/*.xml'
	include 'log4j2.properties'
	include 'build.properties'
}

task getDependencies(type: Copy) {
	from configurations.default
	into 'build/dependencies'
}

task explodedWar(type: Sync) {
	into "${buildDir}/exploded"
	with war
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

configurations.implementation {
	exclude group: 'org.apache.xmlgraphics'
}

configurations.all {
	exclude group: "commons-logging", module: "commons-logging"
}
